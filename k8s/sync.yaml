apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubesail-sync
  annotations:
    kubesailEditorUid: 2a4c3a83-8a06-4d38-9d56-f3d919a29b3d
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubesail-sync
subjects:
  - kind: ServiceAccount
    name: kubesail-sync
    namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubesail-sync
  annotations:
    kubesailEditorUid: 91d835f0-b1a8-4952-a084-bd0e3346fa4e
rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubesail-sync
  labels:
    app: kubesail-sync
  annotations:
    kubesailEditorUid: 5d9942b5-5c6c-4095-b5cc-0f2f768a325b
    kubesail.com/template: erulabs/kubesail-sync
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: kubesail-sync
  template:
    metadata:
      labels:
        app: kubesail-sync
    spec:
      serviceAccountName: kubesail-sync
      terminationGracePeriodSeconds: 0
      volumes:
        - name: fm-pvc
          persistentVolumeClaim:
            claimName: photos
      containers:
        - name: kubesail-sync
          image: kubesail/sync
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          env:
            - name: NODE_ENV
              value: development
            - name: API_CORS_ALLOWED_ORIGINS
              value: "*"
          ports:
            - name: https
              containerPort: 9099
            - name: http
              containerPort: 9098
          volumeMounts:
            - mountPath: /mnt/pvc
              name: fm-pvc
---
kind: Service
metadata:
  name: kubesail-sync
  labels:
    app: kubesail-sync
  annotations:
    kubesailEditorUid: 6ddcefe8-2b31-4c43-9d9a-67cb12a3fec7
apiVersion: v1
spec:
  ports:
    - name: http
      protocol: TCP
      port: 9098
      targetPort: http
  selector:
    app: kubesail-sync

---
kind: Service
metadata:
  name: kubesail-sync-nodeport
  labels:
    app: kubesail-sync
apiVersion: v1
spec:
  type: NodePort
  ports:
    - name: https
      protocol: TCP
      port: 9099
      targetPort: https
  selector:
    app: kubesail-sync

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubesail-sync
  labels:
    app: kubesail-sync
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.org/websocket-services: kubesail-sync
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - hosts:
        - kubesail-sync.local
    - hosts:
        - kubesail-sync.a-dev-cluster.erulabs.dev.k8g8.com
  rules:
    - host: kubesail-sync.local
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: kubesail-sync
                port:
                  name: http
    - host: kubesail-sync.a-dev-cluster.erulabs.dev.k8g8.com
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: kubesail-sync
                port:
                  name: http

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubesail-sync
  annotations:
    kubesailEditorUid: dc48bfa4-6929-4b04-ae43-7d4b3a0e08b9

---
kind: PersistentVolumeClaim
metadata:
  name: photos
  labels:
    app: photos
  annotations:
    kubesailEditorUid: 17383dc9-4523-4d2f-b690-1711388bb337
apiVersion: v1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
